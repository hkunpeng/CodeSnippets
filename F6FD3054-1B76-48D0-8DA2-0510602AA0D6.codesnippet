<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>mydispatchGroup2</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>       let group = DispatchGroup()
        let queue = DispatchQueue(label: "com.premom.loadMatchInfo")
        group.enter()
        queue.async {
            EHHTTPClient.sharedClient.homePageV2MatchPage(type: "ConceptionAndOPKEducation") { [weak self] success, response, error in
                guard let self = self else {
                    group.leave()
                    return
                }
                if success, let obj = response as? EHHomeV2MatchModel {
                    self.conceptAndOPKEduModel = obj
                }
                group.leave()
            }
        }
        
        group.enter()
        queue.async {
            EHHTTPClient.sharedClient.homePageV2MatchPage(type: "GuideToLogOPK") { [weak self] success, response, error in
                guard let self = self else {
                    group.leave()
                    return
                }
                if success, let obj = response as? EHHomeV2MatchModel {
                    self.guideToLogOPKModel = obj
                }
                group.leave()
            }
        }
        
        group.enter()
        queue.async {
            EHHTTPClient.sharedClient.homePageV2MatchPage(type: "SwitchToPregnancy") { [weak self] success, response, error in
                guard let self = self else {
                    group.leave()
                    return
                }
                if success, let obj = response as? EHHomeV2MatchModel {
                    self.swToPregnancyModel = obj
                }
                group.leave()
               
            }
        }
     
        group.notify(queue: queue) { [weak self] in
            guard let self = self else { return }
            g.performInMain {
                self.reloadTopSection()
            }
        }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>F6FD3054-1B76-48D0-8DA2-0510602AA0D6</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>mydispatchGroup2</string>
	<key>IDECodeSnippetTitle</key>
	<string>mydispatchGroup2</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
